{
  "openapi": "3.0.0",
  "info": {
    "title": "Evocare API Documentation",
    "description": "Combined API documentation for all endpoints in the Evocare API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3015",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/user/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "description": "Retrieve user details using their unique ID.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@example.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/media": {
      "get": {
        "summary": "Get all media",
        "description": "Retrieves all media items",
        "tags": [
          "Media"
        ],
        "responses": {
          "200": {
            "description": "A list of media items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Media"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new media",
        "description": "Creates a new media item",
        "tags": [
          "Media"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/media/search": {
      "get": {
        "summary": "Search media",
        "description": "Search for media by term",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "required": true,
            "description": "Search term",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Media"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing search term",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/media/type/{type}": {
      "get": {
        "summary": "Get media by type",
        "description": "Retrieves all media of a specific type",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "description": "Media type (image or video)",
            "schema": {
              "type": "string",
              "enum": [
                "image",
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media of requested type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Media"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid media type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/media/{id}": {
      "get": {
        "summary": "Get media by ID",
        "description": "Retrieves a specific media item",
        "tags": [
          "Media"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Media ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          },
          "404": {
            "description": "Media not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update media",
        "description": "Updates an existing media item",
        "tags": [
          "Media"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Media ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Media not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete media",
        "description": "Deletes a specific media item",
        "tags": [
          "Media"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Media ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Media not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contents": {
      "get": {
        "summary": "Get all content",
        "description": "Retrieves all content sections.",
        "tags": [
          "Content"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Content"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new content",
        "description": "Creates a new content section. Limited to admin users.",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Content"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contents/sections": {
      "get": {
        "summary": "Get content sections",
        "description": "Retrieves all distinct content section names.",
        "tags": [
          "Content"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved content sections",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "section": {
                        "type": "string",
                        "example": "About Us"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contents/section/{section}": {
      "get": {
        "summary": "Get content by section",
        "description": "Retrieves content for a specific section.",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "section",
            "in": "path",
            "description": "Section name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Content"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No content found for section",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contents/{id}": {
      "get": {
        "summary": "Get content by ID",
        "description": "Retrieves a specific content item by ID.",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Content ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Content"
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update content",
        "description": "Updates a specific content item. Limited to admin users.",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Content ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Content"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete content",
        "description": "Deletes a specific content item. Limited to admin users.",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Content ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Content with ID 1 successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/complete-data": {
      "get": {
        "summary": "Get complete references data",
        "description": "Retrieves page content and all references in one call.",
        "tags": [
          "Complete Data"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved complete data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pageContent": {
                      "$ref": "#/components/schemas/PageContent"
                    },
                    "references": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reference"
                      }
                    },
                    "featuredReferences": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reference"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/page-content": {
      "get": {
        "summary": "Get references page content",
        "description": "Retrieves the content for the references page.",
        "tags": [
          "Page Content"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved page content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageContent"
                }
              }
            }
          },
          "404": {
            "description": "Page content not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Page content not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching page content"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create references page content",
        "description": "Creates the content for the references page. Limited to admin users.",
        "tags": [
          "Page Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageContentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created page content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageContent"
                }
              }
            }
          },
          "400": {
            "description": "Page content already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Page content already exists, use update instead"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/page-content/{id}": {
      "put": {
        "summary": "Update references page content",
        "description": "Updates the content for the references page. Limited to admin users.",
        "tags": [
          "Page Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the page content",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageContentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated page content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageContent"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Page content not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/solutions": {
      "get": {
        "summary": "Get all solutions",
        "description": "Retrieves all solutions.",
        "tags": [
          "Solutions"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved solutions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Solution"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new solution",
        "description": "Creates a new solution. Limited to admin users.",
        "tags": [
          "Solutions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created solution",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/solutions/business-line/{businessLine}": {
      "get": {
        "summary": "Get solutions by business line",
        "description": "Retrieves solutions filtered by business line.",
        "tags": [
          "Solutions"
        ],
        "parameters": [
          {
            "name": "businessLine",
            "in": "path",
            "description": "Business line to filter solutions by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved solutions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Solution"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/solutions/{id}": {
      "get": {
        "summary": "Get solution by ID",
        "description": "Retrieves a specific solution by ID including its products.",
        "tags": [
          "Solutions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the solution",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved solution",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Solution"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Solution not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a solution",
        "description": "Updates a solution. Limited to admin users.",
        "tags": [
          "Solutions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the solution",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated solution",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Solution not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a solution",
        "description": "Deletes a solution. Limited to admin users.",
        "tags": [
          "Solutions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the solution",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted solution",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Solution deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Solution not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/solutions/{solutionId}/products": {
      "get": {
        "summary": "Get products by solution ID",
        "description": "Retrieves all products belonging to a specific solution.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "solutionId",
            "in": "path",
            "description": "ID of the solution",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Solution not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/products": {
      "post": {
        "summary": "Create a new product",
        "description": "Creates a new product. Limited to admin users.",
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid solution_id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid solution_id - solution not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "description": "Retrieves a specific product by ID.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a product",
        "description": "Updates a product. Limited to admin users.",
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid solution_id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid solution_id - solution not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "description": "Deletes a product. Limited to admin users.",
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/teams/complete": {
      "get": {
        "summary": "Get complete team data",
        "description": "Retrieves all team data including section, members, and gallery",
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "Complete team data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteTeamData"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/section": {
      "get": {
        "summary": "Get team section",
        "description": "Retrieves the team section",
        "tags": [
          "Team Section"
        ],
        "responses": {
          "200": {
            "description": "Team section found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamSection"
                }
              }
            }
          },
          "404": {
            "description": "Team section not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create team section",
        "description": "Creates a new team section",
        "tags": [
          "Team Section"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamSectionInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created team section",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamSection"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Team section already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/section/{id}": {
      "put": {
        "summary": "Update team section",
        "description": "Updates an existing team section",
        "tags": [
          "Team Section"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Team section ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamSectionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated team section",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamSection"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Team section not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/members": {
      "get": {
        "summary": "Get all team members",
        "description": "Retrieves all team members",
        "tags": [
          "Team Members"
        ],
        "responses": {
          "200": {
            "description": "A list of team members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMember"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create team member",
        "description": "Creates a new team member",
        "tags": [
          "Team Members"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMemberInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created team member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMember"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/members/{id}": {
      "get": {
        "summary": "Get team member by ID",
        "description": "Retrieves a specific team member",
        "tags": [
          "Team Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Team member ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team member found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMember"
                }
              }
            }
          },
          "404": {
            "description": "Team member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update team member",
        "description": "Updates an existing team member",
        "tags": [
          "Team Members"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Team member ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMemberInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated team member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMember"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Team member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete team member",
        "description": "Deletes a specific team member",
        "tags": [
          "Team Members"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Team member ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team member deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Team member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/gallery": {
      "get": {
        "summary": "Get all gallery images",
        "description": "Retrieves all team gallery images",
        "tags": [
          "Team Gallery"
        ],
        "responses": {
          "200": {
            "description": "A list of gallery images",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GalleryImage"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create gallery image",
        "description": "Creates a new gallery image",
        "tags": [
          "Team Gallery"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalleryImageInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created gallery image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalleryImage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/gallery/{id}": {
      "get": {
        "summary": "Get gallery image by ID",
        "description": "Retrieves a specific gallery image",
        "tags": [
          "Team Gallery"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Gallery image ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gallery image found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalleryImage"
                }
              }
            }
          },
          "404": {
            "description": "Gallery image not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update gallery image",
        "description": "Updates an existing gallery image",
        "tags": [
          "Team Gallery"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Gallery image ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GalleryImageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated gallery image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GalleryImage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Gallery image not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete gallery image",
        "description": "Deletes a specific gallery image",
        "tags": [
          "Team Gallery"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Gallery image ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gallery image deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Gallery image not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/partners/complete": {
      "get": {
        "summary": "Get complete partners data",
        "description": "Retrieves all partners data including page content and partners list",
        "tags": [
          "Partners"
        ],
        "responses": {
          "200": {
            "description": "Complete partners data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePartnersData"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/partners/page-content": {
      "get": {
        "summary": "Get partners page content",
        "description": "Retrieves the partners page content",
        "tags": [
          "Partners Page Content"
        ],
        "responses": {
          "200": {
            "description": "Partners page content found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnersPageContent"
                }
              }
            }
          },
          "404": {
            "description": "Partners page content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create partners page content",
        "description": "Creates new partners page content",
        "tags": [
          "Partners Page Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnersPageContentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created partners page content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnersPageContent"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Partners page content already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/partners/page-content/{id}": {
      "put": {
        "summary": "Update partners page content",
        "description": "Updates existing partners page content",
        "tags": [
          "Partners Page Content"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Partners page content ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnersPageContentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated partners page content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnersPageContent"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Partners page content not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/partners": {
      "get": {
        "summary": "Get all partners",
        "description": "Retrieves all partners",
        "tags": [
          "Partners"
        ],
        "responses": {
          "200": {
            "description": "A list of partners",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Partner"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create partner",
        "description": "Creates a new partner",
        "tags": [
          "Partners"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created partner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/partners/{id}": {
      "get": {
        "summary": "Get partner by ID",
        "description": "Retrieves a specific partner",
        "tags": [
          "Partners"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Partner ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Partner found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner"
                }
              }
            }
          },
          "404": {
            "description": "Partner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update partner",
        "description": "Updates an existing partner",
        "tags": [
          "Partners"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Partner ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated partner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Partner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete partner",
        "description": "Deletes a specific partner",
        "tags": [
          "Partners"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Partner ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Partner deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Partner not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/references": {
      "get": {
        "summary": "Get all references",
        "description": "Retrieves all client references/testimonials.",
        "tags": [
          "References"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved references",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reference"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new reference",
        "description": "Creates a new client reference/testimonial. Limited to admin users.",
        "tags": [
          "References"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created reference",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reference"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/references/featured": {
      "get": {
        "summary": "Get featured references",
        "description": "Retrieves featured client references/testimonials.",
        "tags": [
          "References"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved featured references",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reference"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/references/{id}": {
      "get": {
        "summary": "Get reference by ID",
        "description": "Retrieves a specific client reference/testimonial by ID.",
        "tags": [
          "References"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the reference",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved reference",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reference"
                }
              }
            }
          },
          "404": {
            "description": "Reference not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a reference",
        "description": "Updates a client reference/testimonial. Limited to admin users.",
        "tags": [
          "References"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the reference",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated reference",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reference"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Reference not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a reference",
        "description": "Deletes a client reference/testimonial. Limited to admin users.",
        "tags": [
          "References"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the reference",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted reference",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Reference deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Reference not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "summary": "Get all events",
        "description": "Retrieves all events with their associated media",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "A list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new event",
        "description": "Creates a new event",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}": {
      "get": {
        "summary": "Get event by ID",
        "description": "Retrieves a specific event with its associated media",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update event",
        "description": "Updates an existing event",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete event",
        "description": "Deletes a specific event and its associated media",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{eventId}/media": {
      "get": {
        "summary": "Get media by event ID",
        "description": "Retrieves all media associated with a specific event",
        "tags": [
          "Event Media"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMedia"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add media to event",
        "description": "Adds new media to a specific event",
        "tags": [
          "Event Media"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMediaInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMedia"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{eventId}/media/{mediaId}": {
      "put": {
        "summary": "Update media",
        "description": "Updates existing media",
        "tags": [
          "Event Media"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "description": "Media ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMediaInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated media",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMedia"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Media or event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete media",
        "description": "Deletes specific media",
        "tags": [
          "Event Media"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "description": "Media ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Media or event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Media": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier"
          },
          "event_id": {
            "type": "integer",
            "description": "Associated event ID"
          },
          "event_title": {
            "type": "string",
            "description": "Title of the associated event"
          },
          "url": {
            "type": "string",
            "description": "Media URL"
          },
          "type": {
            "type": "string",
            "enum": [
              "image",
              "video"
            ],
            "description": "Media type"
          },
          "title": {
            "type": "string",
            "description": "Media title"
          },
          "caption": {
            "type": "string",
            "description": "Media caption"
          },
          "thumbnail_url": {
            "type": "string",
            "description": "Thumbnail URL for videos"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in seconds for videos"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes"
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the media"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "MediaInput": {
        "type": "object",
        "required": [
          "event_id",
          "url",
          "type"
        ],
        "properties": {
          "event_id": {
            "type": "integer",
            "description": "Associated event ID"
          },
          "url": {
            "type": "string",
            "description": "Media URL"
          },
          "type": {
            "type": "string",
            "enum": [
              "image",
              "video"
            ],
            "description": "Media type"
          },
          "title": {
            "type": "string",
            "description": "Media title"
          },
          "caption": {
            "type": "string",
            "description": "Media caption"
          },
          "thumbnail_url": {
            "type": "string",
            "description": "Thumbnail URL for videos"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in seconds for videos"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes"
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the media"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "Content": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "section": {
            "type": "string",
            "example": "About Us"
          },
          "title": {
            "type": "string",
            "example": "Our Journey"
          },
          "content": {
            "type": "string",
            "example": "Our journey began in Tunisia, where we established ourselves as a pioneering force..."
          },
          "order": {
            "type": "integer",
            "example": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContentInput": {
        "type": "object",
        "required": [
          "section",
          "content"
        ],
        "properties": {
          "section": {
            "type": "string",
            "example": "About Us"
          },
          "title": {
            "type": "string",
            "example": "Our Journey"
          },
          "content": {
            "type": "string",
            "example": "Our journey began in Tunisia, where we established ourselves as a pioneering force..."
          },
          "order": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "PageContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Our Solutions"
          },
          "subtitle": {
            "type": "string",
            "example": "We care for a wide variety of animals"
          },
          "description": {
            "type": "string",
            "example": "We provide comprehensive solutions for various animal types..."
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageContentInput": {
        "type": "object",
        "required": [
          "title",
          "subtitle",
          "description"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "Our Solutions"
          },
          "subtitle": {
            "type": "string",
            "example": "We care for a wide variety of animals"
          },
          "description": {
            "type": "string",
            "example": "We provide comprehensive solutions for various animal types..."
          }
        }
      },
      "Solution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Companion Animals"
          },
          "description": {
            "type": "string",
            "example": "Companion animals are considered integral members of many families..."
          },
          "image_url": {
            "type": "string",
            "example": "https://example.com/images/companion-animals.jpg"
          },
          "link_url": {
            "type": "string",
            "example": "/solutions/companion-animals"
          },
          "business_line": {
            "type": "string",
            "example": "Companion Animals"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SolutionInput": {
        "type": "object",
        "required": [
          "name",
          "description",
          "image_url",
          "link_url",
          "business_line"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Companion Animals"
          },
          "description": {
            "type": "string",
            "example": "Companion animals are considered integral members of many families..."
          },
          "image_url": {
            "type": "string",
            "example": "https://example.com/images/companion-animals.jpg"
          },
          "link_url": {
            "type": "string",
            "example": "/solutions/companion-animals"
          },
          "business_line": {
            "type": "string",
            "example": "Companion Animals"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Surgical Instruments"
          },
          "description": {
            "type": "string",
            "example": "High-quality surgical instruments for veterinary practices..."
          },
          "solution_id": {
            "type": "integer",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "required": [
          "name",
          "description",
          "solution_id"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Surgical Instruments"
          },
          "description": {
            "type": "string",
            "example": "High-quality surgical instruments for veterinary practices..."
          },
          "solution_id": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "CompleteTeamData": {
        "type": "object",
        "properties": {
          "section": {
            "$ref": "#/components/schemas/TeamSection"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamMember"
            }
          },
          "gallery": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GalleryImage"
            }
          }
        }
      },
      "TeamSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Section title"
          },
          "description": {
            "type": "string",
            "description": "Section description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "TeamSectionInput": {
        "type": "object",
        "required": [
          "title",
          "description"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Section title"
          },
          "description": {
            "type": "string",
            "description": "Section description"
          }
        }
      },
      "TeamMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier"
          },
          "fullname": {
            "type": "string",
            "description": "Full name of the team member"
          },
          "title": {
            "type": "string",
            "description": "Job title or position"
          },
          "description": {
            "type": "string",
            "description": "Member description or bio"
          },
          "photo_url": {
            "type": "string",
            "description": "URL to the member's photo"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "TeamMemberInput": {
        "type": "object",
        "required": [
          "fullname",
          "title",
          "description"
        ],
        "properties": {
          "fullname": {
            "type": "string",
            "description": "Full name of the team member"
          },
          "title": {
            "type": "string",
            "description": "Job title or position"
          },
          "description": {
            "type": "string",
            "description": "Member description or bio"
          },
          "photo_url": {
            "type": "string",
            "description": "URL to the member's photo"
          }
        }
      },
      "GalleryImage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier"
          },
          "image_url": {
            "type": "string",
            "description": "URL to the image"
          },
          "caption": {
            "type": "string",
            "description": "Image caption"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "GalleryImageInput": {
        "type": "object",
        "required": [
          "image_url"
        ],
        "properties": {
          "image_url": {
            "type": "string",
            "description": "URL to the image"
          },
          "caption": {
            "type": "string",
            "description": "Image caption"
          }
        }
      },
      "CompletePartnersData": {
        "type": "object",
        "properties": {
          "pageContent": {
            "$ref": "#/components/schemas/PartnersPageContent"
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Partner"
            }
          }
        }
      },
      "PartnersPageContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Page title"
          },
          "subtitle": {
            "type": "string",
            "description": "Page subtitle"
          },
          "description": {
            "type": "string",
            "description": "Page description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "PartnersPageContentInput": {
        "type": "object",
        "required": [
          "title",
          "subtitle",
          "description"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Page title"
          },
          "subtitle": {
            "type": "string",
            "description": "Page subtitle"
          },
          "description": {
            "type": "string",
            "description": "Page description"
          }
        }
      },
      "Partner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier"
          },
          "name": {
            "type": "string",
            "description": "Partner name"
          },
          "image_url": {
            "type": "string",
            "description": "URL to the partner's logo"
          },
          "description": {
            "type": "string",
            "description": "Partner description"
          },
          "website_url": {
            "type": "string",
            "description": "URL to the partner's website"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "PartnerInput": {
        "type": "object",
        "required": [
          "name",
          "image_url",
          "description",
          "website_url"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Partner name"
          },
          "image_url": {
            "type": "string",
            "description": "URL to the partner's logo"
          },
          "description": {
            "type": "string",
            "description": "Partner description"
          },
          "website_url": {
            "type": "string",
            "description": "URL to the partner's website"
          }
        }
      },
      "Reference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "client_name": {
            "type": "string",
            "example": "Jane Smith"
          },
          "company_name": {
            "type": "string",
            "example": "Best Vet Clinic"
          },
          "position": {
            "type": "string",
            "example": "Lead Veterinarian"
          },
          "testimonial": {
            "type": "string",
            "example": "Working with Evocare has been a fantastic experience..."
          },
          "image_url": {
            "type": "string",
            "example": "https://example.com/images/jane-smith.jpg"
          },
          "country": {
            "type": "string",
            "example": "Malta"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "example": 5
          },
          "is_featured": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ReferenceInput": {
        "type": "object",
        "required": [
          "client_name",
          "company_name",
          "position",
          "testimonial",
          "image_url",
          "country",
          "rating"
        ],
        "properties": {
          "client_name": {
            "type": "string",
            "example": "Jane Smith"
          },
          "company_name": {
            "type": "string",
            "example": "Best Vet Clinic"
          },
          "position": {
            "type": "string",
            "example": "Lead Veterinarian"
          },
          "testimonial": {
            "type": "string",
            "example": "Working with Evocare has been a fantastic experience..."
          },
          "image_url": {
            "type": "string",
            "example": "https://example.com/images/jane-smith.jpg"
          },
          "country": {
            "type": "string",
            "example": "Malta"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "example": 5
          },
          "is_featured": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "subtitle": {
            "type": "string",
            "description": "Event subtitle"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Event date"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          },
          "media": {
            "type": "array",
            "description": "Associated media",
            "items": {
              "$ref": "#/components/schemas/EventMedia"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "EventInput": {
        "type": "object",
        "required": [
          "title",
          "date",
          "description"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Event title"
          },
          "subtitle": {
            "type": "string",
            "description": "Event subtitle"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Event date"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          }
        }
      },
      "EventMedia": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier"
          },
          "event_id": {
            "type": "integer",
            "description": "Related event ID"
          },
          "url": {
            "type": "string",
            "description": "Media URL"
          },
          "type": {
            "type": "string",
            "enum": [
              "image",
              "video"
            ],
            "description": "Media type"
          },
          "title": {
            "type": "string",
            "description": "Media title"
          },
          "caption": {
            "type": "string",
            "description": "Media caption"
          },
          "thumbnail_url": {
            "type": "string",
            "description": "Thumbnail URL for videos"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in seconds for videos"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes"
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the media"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "EventMediaInput": {
        "type": "object",
        "required": [
          "url",
          "type"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "Media URL"
          },
          "type": {
            "type": "string",
            "enum": [
              "image",
              "video"
            ],
            "description": "Media type"
          },
          "title": {
            "type": "string",
            "description": "Media title"
          },
          "caption": {
            "type": "string",
            "description": "Media caption"
          },
          "thumbnail_url": {
            "type": "string",
            "description": "Thumbnail URL for videos"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in seconds for videos"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes"
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the media"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}