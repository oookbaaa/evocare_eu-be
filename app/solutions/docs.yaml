openapi: 3.0.0
info:
  title: Solutions API
  description: API for managing solutions and their solution products
  version: 1.0.0

servers:
  - url: http://localhost:3015
    description: Local development server

paths:
  /api/solutions:
    get:
      summary: Get all solutions
      description: Retrieves all solutions.
      tags:
        - Solutions
      responses:
        '200':
          description: Successfully retrieved solutions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Solution'
        '500':
          description: Internal server error

    post:
      summary: Create a new solution
      description: Creates a new solution. Limited to admin users.
      tags:
        - Solutions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionInput'
      responses:
        '201':
          description: Successfully created solution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /api/solutions/business-line/{businessLine}:
    get:
      summary: Get solutions by business line
      description: Retrieves solutions filtered by business line.
      tags:
        - Solutions
      parameters:
        - name: businessLine
          in: path
          description: Business line to filter solutions by
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved solutions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Solution'
        '500':
          description: Internal server error

  /api/solutions/{id}:
    get:
      summary: Get solution by ID
      description: Retrieves a specific solution by ID including its solution products.
      tags:
        - Solutions
      parameters:
        - name: id
          in: path
          description: ID of the solution
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved solution
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Solution'
                  - type: object
                    properties:
                      products:
                        type: array
                        items:
                          $ref: '#/components/schemas/SolutionProduct'
        '404':
          description: Solution not found
        '500':
          description: Internal server error

    put:
      summary: Update a solution
      description: Updates a solution. Limited to admin users.
      tags:
        - Solutions
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the solution
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionInput'
      responses:
        '200':
          description: Successfully updated solution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Solution not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a solution
      description: Deletes a solution. Limited to admin users.
      tags:
        - Solutions
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the solution
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted solution
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Solution deleted successfully'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Solution not found
        '500':
          description: Internal server error

  /api/solutions/{solutionId}/products:
    get:
      summary: Get solution products by solution ID
      description: Retrieves all solution products belonging to a specific solution.
      tags:
        - Solution Products
      parameters:
        - name: solutionId
          in: path
          description: ID of the solution
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved solution products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolutionProduct'
        '404':
          description: Solution not found
        '500':
          description: Internal server error

  /api/solutions/products:
    post:
      summary: Create a new solution product
      description: Creates a new solution product. Limited to admin users.
      tags:
        - Solution Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionProductInput'
      responses:
        '201':
          description: Successfully created solution product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionProduct'
        '400':
          description: Invalid solution_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Invalid solution_id - solution not found'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /api/solutions/products/{id}:
    get:
      summary: Get solution product by ID
      description: Retrieves a specific solution product by ID.
      tags:
        - Solution Products
      parameters:
        - name: id
          in: path
          description: ID of the solution product
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved solution product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionProduct'
        '404':
          description: Solution product not found
        '500':
          description: Internal server error

    put:
      summary: Update a solution product
      description: Updates a solution product. Limited to admin users.
      tags:
        - Solution Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the solution product
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SolutionProductInput'
      responses:
        '200':
          description: Successfully updated solution product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionProduct'
        '400':
          description: Invalid solution_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Invalid solution_id - solution not found'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Solution product not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a solution product
      description: Deletes a solution product. Limited to admin users.
      tags:
        - Solution Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the solution product
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted solution product
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Solution product deleted successfully'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Solution product not found
        '500':
          description: Internal server error

  /api/solutions/complete-data:
    get:
      summary: Get complete solutions data
      description: Retrieves solutions and all their products in one call.
      tags:
        - Complete Data
      responses:
        '200':
          description: Successfully retrieved complete data
          content:
            application/json:
              schema:
                type: object
                properties:
                  solutions:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Solution'
                        - type: object
                          properties:
                            products:
                              type: array
                              items:
                                $ref: '#/components/schemas/SolutionProduct'
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Solution:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'Companion Animals'
        description:
          type: string
          example: 'Companion animals solutions for veterinary clinics'
        image_url:
          type: string
          example: '/uploads/solutions/companion-animals.jpg'
        link_url:
          type: string
          example: '/solutions/companion-animals'
        business_line:
          type: string
          example: 'Companion Animals'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SolutionInput:
      type: object
      required:
        - name
        - description
        - link_url
        - business_line
      properties:
        name:
          type: string
          example: 'Companion Animals'
        description:
          type: string
          example: 'Companion animals solutions for veterinary clinics'
        image_url:
          type: string
          example: '/uploads/solutions/companion-animals.jpg'
        link_url:
          type: string
          example: '/solutions/companion-animals'
        business_line:
          type: string
          example: 'Companion Animals'

    SolutionProduct:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'Veterinary X-Ray'
        description:
          type: string
          example: 'Advanced X-Ray solutions for veterinary clinics'
        solution_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SolutionProductInput:
      type: object
      required:
        - name
        - description
        - solution_id
      properties:
        name:
          type: string
          example: 'Veterinary X-Ray'
        description:
          type: string
          example: 'Advanced X-Ray solutions for veterinary clinics'
        solution_id:
          type: integer
          example: 1
