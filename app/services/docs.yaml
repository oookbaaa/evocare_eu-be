openapi: 3.0.0
info:
  title: Services API
  description: API endpoints for the Services module
  version: 1.0.0
tags:
  - name: Services
    description: Operations for services
  - name: Service Categories
    description: Operations for service categories
paths:
  /api/services:
    get:
      summary: Get all services
      description: Returns a list of all services
      tags:
        - Services
      responses:
        '200':
          description: List of services
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new service
      description: Creates a new service
      tags:
        - Services
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceInput'
      responses:
        '201':
          description: Service created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Service created successfully
                  data:
                    $ref: '#/components/schemas/Service'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/services/{id}:
    get:
      summary: Get a service by ID
      description: Returns a service by ID
      tags:
        - Services
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Service ID
      responses:
        '200':
          description: Service found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Service'
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a service
      description: Updates a service by ID
      tags:
        - Services
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Service ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceInput'
      responses:
        '200':
          description: Service updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Service updated successfully
                  data:
                    $ref: '#/components/schemas/Service'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a service
      description: Deletes a service by ID
      tags:
        - Services
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Service ID
      responses:
        '200':
          description: Service deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Service deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/services/category/{categoryId}:
    get:
      summary: Get services by category
      description: Returns services filtered by category ID
      tags:
        - Services
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
          description: Category ID
      responses:
        '200':
          description: List of services in the category
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/services/categories:
    get:
      summary: Get all service categories
      description: Returns a list of all service categories
      tags:
        - Service Categories
      responses:
        '200':
          description: List of service categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceCategory'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new service category
      description: Creates a new service category
      tags:
        - Service Categories
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCategoryInput'
      responses:
        '201':
          description: Service category created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Service category created successfully
                  data:
                    $ref: '#/components/schemas/ServiceCategory'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/services/categories/{id}:
    get:
      summary: Get a service category by ID
      description: Returns a service category by ID
      tags:
        - Service Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Service Category ID
      responses:
        '200':
          description: Service category found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ServiceCategory'
        '404':
          description: Service category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a service category
      description: Updates a service category by ID
      tags:
        - Service Categories
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Service Category ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCategoryInput'
      responses:
        '200':
          description: Service category updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Service category updated successfully
                  data:
                    $ref: '#/components/schemas/ServiceCategory'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Service category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a service category
      description: Deletes a service category by ID
      tags:
        - Service Categories
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Service Category ID
      responses:
        '200':
          description: Service category deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Service category deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Service category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/services/data/complete:
    get:
      summary: Get complete services data
      description: Returns complete services data including categories with their services
      tags:
        - Services
      responses:
        '200':
          description: Complete services data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Web Development
                            description:
                              type: string
                              example: Custom web application development
                            icon_url:
                              type: string
                              example: /uploads/icons/web-dev.png
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                            services:
                              type: array
                              items:
                                $ref: '#/components/schemas/Service'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Service:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Website Development
        description:
          type: string
          example: Custom website development with modern technologies
        image_url:
          type: string
          example: /uploads/services/web-dev.jpg
        category_id:
          type: integer
          example: 1
          nullable: true
        category_name:
          type: string
          example: Web Development
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ServiceInput:
      type: object
      required:
        - name
        - description
        - image_url
      properties:
        name:
          type: string
          example: Website Development
        description:
          type: string
          example: Custom website development with modern technologies
        image_url:
          type: string
          example: /uploads/services/web-dev.jpg
        category_id:
          type: integer
          example: 1
          nullable: true
    ServiceCategory:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Web Development
        description:
          type: string
          example: Custom web application development
        icon_url:
          type: string
          example: /uploads/icons/web-dev.png
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ServiceCategoryInput:
      type: object
      required:
        - name
        - description
        - icon_url
      properties:
        name:
          type: string
          example: Web Development
        description:
          type: string
          example: Custom web application development
        icon_url:
          type: string
          example: /uploads/icons/web-dev.png
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error message
        error:
          type: string
          example: Detailed error information
    ValidationError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Validation error
        errors:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                example: ''
              msg:
                type: string
                example: Name is required
              param:
                type: string
                example: name
              location:
                type: string
                example: body
