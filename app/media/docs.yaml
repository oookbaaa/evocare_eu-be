openapi: 3.0.0
info:
  title: Media Management API
  description: API for managing media across the system
  version: 1.0.0
paths:
  /api/media:
    get:
      summary: Get all media
      description: Retrieves all media items
      tags:
        - Media
      responses:
        '200':
          description: A list of media items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create new media
      description: Creates a new media item
      tags:
        - Media
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaInput'
      responses:
        '201':
          description: Created media
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/media/search:
    get:
      summary: Search media
      description: Search for media by term
      tags:
        - Media
      parameters:
        - name: term
          in: query
          required: true
          description: Search term
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
        '400':
          description: Missing search term
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/media/type/{type}:
    get:
      summary: Get media by type
      description: Retrieves all media of a specific type
      tags:
        - Media
      parameters:
        - name: type
          in: path
          required: true
          description: Media type (image or video)
          schema:
            type: string
            enum: [image, video]
      responses:
        '200':
          description: Media of requested type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
        '400':
          description: Invalid media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/media/{id}:
    get:
      summary: Get media by ID
      description: Retrieves a specific media item
      tags:
        - Media
      parameters:
        - name: id
          in: path
          required: true
          description: Media ID
          schema:
            type: integer
      responses:
        '200':
          description: Media found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '404':
          description: Media not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update media
      description: Updates an existing media item
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Media ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaInput'
      responses:
        '200':
          description: Updated media
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Media not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete media
      description: Deletes a specific media item
      tags:
        - Media
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Media ID
          schema:
            type: integer
      responses:
        '200':
          description: Media deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Media not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Media:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        event_id:
          type: integer
          description: Associated event ID
        event_title:
          type: string
          description: Title of the associated event
        url:
          type: string
          description: Media URL
        type:
          type: string
          enum: [image, video]
          description: Media type
        title:
          type: string
          description: Media title
        caption:
          type: string
          description: Media caption
        thumbnail_url:
          type: string
          description: Thumbnail URL for videos
        duration:
          type: integer
          description: Duration in seconds for videos
        size:
          type: integer
          description: File size in bytes
        mime_type:
          type: string
          description: MIME type of the media
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
    MediaInput:
      type: object
      required:
        - event_id
        - url
        - type
      properties:
        event_id:
          type: integer
          description: Associated event ID
        url:
          type: string
          description: Media URL
        type:
          type: string
          enum: [image, video]
          description: Media type
        title:
          type: string
          description: Media title
        caption:
          type: string
          description: Media caption
        thumbnail_url:
          type: string
          description: Thumbnail URL for videos
        duration:
          type: integer
          description: Duration in seconds for videos
        size:
          type: integer
          description: File size in bytes
        mime_type:
          type: string
          description: MIME type of the media
    Error:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
