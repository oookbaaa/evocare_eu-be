openapi: 3.0.0
info:
  title: Events Management API
  description: API for managing events and their associated media
  version: 1.0.0
paths:
  /api/events:
    get:
      summary: Get all events
      description: Retrieves all events with their associated media
      tags:
        - Events
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create new event
      description: Creates a new event
      tags:
        - Events
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '201':
          description: Created event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/events/{id}:
    get:
      summary: Get event by ID
      description: Retrieves a specific event with its associated media
      tags:
        - Events
      parameters:
        - name: id
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
      responses:
        '200':
          description: Event found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update event
      description: Updates an existing event
      tags:
        - Events
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '200':
          description: Updated event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete event
      description: Deletes a specific event and its associated media
      tags:
        - Events
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
      responses:
        '200':
          description: Event deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/events/{eventId}/media:
    get:
      summary: Get media by event ID
      description: Retrieves all media associated with a specific event
      tags:
        - Event Media
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
      responses:
        '200':
          description: Media found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventMedia'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add media to event
      description: Adds new media to a specific event
      tags:
        - Event Media
      security:
        - bearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventMediaInput'
      responses:
        '201':
          description: Created media
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMedia'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/events/{eventId}/media/{mediaId}:
    put:
      summary: Update media
      description: Updates existing media
      tags:
        - Event Media
      security:
        - bearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
        - name: mediaId
          in: path
          required: true
          description: Media ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventMediaInput'
      responses:
        '200':
          description: Updated media
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMedia'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Media or event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete media
      description: Deletes specific media
      tags:
        - Event Media
      security:
        - bearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
        - name: mediaId
          in: path
          required: true
          description: Media ID
          schema:
            type: integer
      responses:
        '200':
          description: Media deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Media or event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        title:
          type: string
          description: Event title
        subtitle:
          type: string
          description: Event subtitle
        date:
          type: string
          format: date
          description: Event date
        description:
          type: string
          description: Event description
        media:
          type: array
          description: Associated media
          items:
            $ref: '#/components/schemas/EventMedia'
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
    EventInput:
      type: object
      required:
        - title
        - date
        - description
      properties:
        title:
          type: string
          description: Event title
        subtitle:
          type: string
          description: Event subtitle
        date:
          type: string
          format: date
          description: Event date
        description:
          type: string
          description: Event description
    EventMedia:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        event_id:
          type: integer
          description: Related event ID
        url:
          type: string
          description: Media URL
        type:
          type: string
          enum: [image, video]
          description: Media type
        title:
          type: string
          description: Media title
        caption:
          type: string
          description: Media caption
        thumbnail_url:
          type: string
          description: Thumbnail URL for videos
        duration:
          type: integer
          description: Duration in seconds for videos
        size:
          type: integer
          description: File size in bytes
        mime_type:
          type: string
          description: MIME type of the media
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
    EventMediaInput:
      type: object
      required:
        - url
        - type
      properties:
        url:
          type: string
          description: Media URL
        type:
          type: string
          enum: [image, video]
          description: Media type
        title:
          type: string
          description: Media title
        caption:
          type: string
          description: Media caption
        thumbnail_url:
          type: string
          description: Thumbnail URL for videos
        duration:
          type: integer
          description: Duration in seconds for videos
        size:
          type: integer
          description: File size in bytes
        mime_type:
          type: string
          description: MIME type of the media
    Error:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
