openapi: 3.0.0
info:
  title: Team Management API
  description: API for managing team data including team section, team members, and gallery
  version: 1.0.0
paths:
  /api/teams/complete:
    get:
      summary: Get complete team data
      description: Retrieves all team data including section, members, and gallery
      tags:
        - Teams
      responses:
        '200':
          description: Complete team data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteTeamData'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/teams/section:
    get:
      summary: Get team section
      description: Retrieves the team section
      tags:
        - Team Section
      responses:
        '200':
          description: Team section found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamSection'
        '404':
          description: Team section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create team section
      description: Creates a new team section
      tags:
        - Team Section
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamSectionInput'
      responses:
        '201':
          description: Created team section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamSection'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Team section already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/teams/section/{id}:
    put:
      summary: Update team section
      description: Updates an existing team section
      tags:
        - Team Section
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Team section ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamSectionInput'
      responses:
        '200':
          description: Updated team section
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamSection'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Team section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/teams/members:
    get:
      summary: Get all team members
      description: Retrieves all team members
      tags:
        - Team Members
      responses:
        '200':
          description: A list of team members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMember'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create team member
      description: Creates a new team member
      tags:
        - Team Members
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMemberInput'
      responses:
        '201':
          description: Created team member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/teams/members/{id}:
    get:
      summary: Get team member by ID
      description: Retrieves a specific team member
      tags:
        - Team Members
      parameters:
        - name: id
          in: path
          required: true
          description: Team member ID
          schema:
            type: integer
      responses:
        '200':
          description: Team member found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
        '404':
          description: Team member not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update team member
      description: Updates an existing team member
      tags:
        - Team Members
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Team member ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMemberInput'
      responses:
        '200':
          description: Updated team member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Team member not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete team member
      description: Deletes a specific team member
      tags:
        - Team Members
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Team member ID
          schema:
            type: integer
      responses:
        '200':
          description: Team member deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Team member not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/teams/gallery:
    get:
      summary: Get all gallery images
      description: Retrieves all team gallery images
      tags:
        - Team Gallery
      responses:
        '200':
          description: A list of gallery images
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GalleryImage'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create gallery image
      description: Creates a new gallery image
      tags:
        - Team Gallery
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryImageInput'
      responses:
        '201':
          description: Created gallery image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImage'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/teams/gallery/{id}:
    get:
      summary: Get gallery image by ID
      description: Retrieves a specific gallery image
      tags:
        - Team Gallery
      parameters:
        - name: id
          in: path
          required: true
          description: Gallery image ID
          schema:
            type: integer
      responses:
        '200':
          description: Gallery image found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImage'
        '404':
          description: Gallery image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update gallery image
      description: Updates an existing gallery image
      tags:
        - Team Gallery
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Gallery image ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryImageInput'
      responses:
        '200':
          description: Updated gallery image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImage'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Gallery image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete gallery image
      description: Deletes a specific gallery image
      tags:
        - Team Gallery
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Gallery image ID
          schema:
            type: integer
      responses:
        '200':
          description: Gallery image deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Gallery image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    CompleteTeamData:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/TeamSection'
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
        gallery:
          type: array
          items:
            $ref: '#/components/schemas/GalleryImage'
    TeamSection:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        title:
          type: string
          description: Section title
        description:
          type: string
          description: Section description
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
    TeamSectionInput:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          description: Section title
        description:
          type: string
          description: Section description
    TeamMember:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        fullname:
          type: string
          description: Full name of the team member
        title:
          type: string
          description: Job title or position
        description:
          type: string
          description: Member description or bio
        photo_url:
          type: string
          description: URL to the member's photo
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
    TeamMemberInput:
      type: object
      required:
        - fullname
        - title
        - description
      properties:
        fullname:
          type: string
          description: Full name of the team member
        title:
          type: string
          description: Job title or position
        description:
          type: string
          description: Member description or bio
        photo_url:
          type: string
          description: URL to the member's photo
    GalleryImage:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
        image_url:
          type: string
          description: URL to the image
        caption:
          type: string
          description: Image caption
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
    GalleryImageInput:
      type: object
      required:
        - image_url
      properties:
        image_url:
          type: string
          description: URL to the image
        caption:
          type: string
          description: Image caption
    Error:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
